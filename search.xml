<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[js字符串截取]]></title>
      <url>http://ChunlLing.github.io.com/2017/03/29/js%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%88%AA%E5%8F%96/</url>
      <content type="html"><![CDATA[<p>截取字符串的三个方法<code>substring()</code>，<code>slice()</code>和<code>split()</code>对比，<code>substr()</code>已废弃，不作考虑~</p>
<h1>substring()： 返回字符串的一个子串</h1>
<h2>概要</h2>
<p>string.substring(from, to)
*from *: 一个非负整数，指定要提取的子串的第一个字符在string中的位置
*to *: 一个非负整数，比要提取的子串的最后一个字符的位置大1.如果省略这个参数，则返回的子串将持续到string的结尾
返回： 一个新的字符串，长度为to-from，内容为string的一个子串。新字符串的内容为string中从位置from到to-1的字符的副本</p>
<h2>描述</h2>
<p>如果from等于to，返回空字符串
如果from比to大，先交换两个参数的值，然后返回它们之间的子串
此方法不接受负参
不修改string</p>
<hr>
<h1>slice()： 提取一个子串</h1>
<h2>概要</h2>
<p>string.slice(start, end)
*start *: 切片开始的索引。如果为负，将从该字符串的尾部开始计算，如-1代表最后一个字符，-2代表倒数第二个字符
*end *: 紧跟着切片结尾的字符串索引。如果不指定，切片将包括从start到当前字符串结尾的所有字符；如果参数为负，将从该字符串的尾部开始计算
返回： 一个新的字符串，内容为string中自start位置开始并且包含start位置，直到但不包含end位置的所有字符</p>
<h2>描述</h2>
<p>返回一个字符串，内容为string中的一个切片或子串。
不修改string</p>
<hr>
<h1>split(): 将一个字符串切分为一个由字符串组成的数组</h1>
<h2>概要</h2>
<p>string.split(delimiter, limit)
*delimiter *: string切分处的字符串或正则表达式
*limit *: 可选，整数，指定已返回数组的最大长度。如果指定，最多返回数量为这个数字的子串；如果没有指定，将切分整个字符串
返回： 一个由字符串组成的数组</p>
<h2>描述</h2>
<p>split()方法创建并返回一个数组，内容为至多limit个给定的字符串string的子串。子串创建的方式：从string()的开头搜索到结尾，在所有匹配delimiter的文本的前后方断开。分割文本不包含在返回的子串中。但当delimiter为带圆括号的正则表达式时可返回匹配圆括号内的子串（@.@见快捷测试）</p>
<hr>
<p>快捷测试</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str1 = <span class="string">'abcdef'</span>;</div><div class="line"><span class="built_in">console</span>.log(str1);</div><div class="line"><span class="built_in">console</span>.log(str1.substring(<span class="number">0</span>, <span class="number">3</span>));</div><div class="line"><span class="built_in">console</span>.log(str1);</div><div class="line"></div><div class="line"><span class="keyword">var</span> str2 = <span class="string">'abcdef'</span>;</div><div class="line"><span class="built_in">console</span>.log(str2);</div><div class="line"><span class="built_in">console</span>.log(str2.sclice(<span class="number">0</span>, <span class="number">3</span>));</div><div class="line"><span class="built_in">console</span>.log(str2);</div><div class="line"><span class="built_in">console</span>.log(str2.sclice(<span class="number">4</span>, <span class="number">-3</span>));</div><div class="line"></div><div class="line"><span class="keyword">var</span> str3 = <span class="string">'hello world'</span>;</div><div class="line"><span class="built_in">console</span>.log(str3);</div><div class="line"><span class="built_in">console</span>.log(str3.split(<span class="string">' '</span>));</div><div class="line"><span class="built_in">console</span>.log(str3);</div><div class="line"><span class="built_in">console</span>.log(str3.split(<span class="regexp">/hello/</span>));</div><div class="line"><span class="built_in">console</span>.log(str3.split(<span class="regexp">/(hello)/</span>));</div><div class="line"></div><div class="line"><span class="keyword">var</span> str4 = <span class="string">'hello &lt;b&gt;world&lt;/b&gt;'</span>;</div><div class="line"><span class="built_in">console</span>.log(str4.split(<span class="regexp">/&lt;[^&gt;]*&gt;/</span>));</div><div class="line"></div><div class="line"><span class="keyword">var</span> str5 = <span class="string">'hello hello &lt;b&gt;world&lt;/b&gt;'</span>;</div><div class="line"><span class="built_in">console</span>.log(str5.split(<span class="regexp">/(&lt;[^&gt;]*&gt;)/</span>));</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> JS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CSS布局]]></title>
      <url>http://ChunlLing.github.io.com/2017/03/24/%E5%B8%83%E5%B1%80-%E5%9C%A3%E6%9D%AF%E5%B8%83%E5%B1%80%E5%92%8C%E5%8F%8C%E9%A3%9E%E7%BF%BC%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<p>先花1分钟时间，想想怎样实现一个三列布局？？？</p>
<p>在IFE的任务三和任务九中为实现这种布局想的几种方法。笔记~</p>
<hr>
<p>PS:方便想象，左中右结构如下</p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">div</span> id=<span class="string">"left"</span>&gt;&lt;/<span class="keyword">div</span>&gt;	<span class="comment">// 左</span></div><div class="line">&lt;<span class="keyword">div</span> id=<span class="string">"middle"</span>&gt;&lt;/<span class="keyword">div</span>&gt;	<span class="comment">// 中</span></div><div class="line">&lt;<span class="keyword">div</span> id=<span class="string">"right"</span>&gt;&lt;/<span class="keyword">div</span>&gt;	<span class="comment">// 右</span></div></pre></td></tr></table></figure>
<p>问题描述：左右两栏宽度固定，中间一栏自适应。
应用背景：有时在网页中，左边栏通常作为侧栏显示一些次要信息，右边栏或者为广告位，需要优先渲染中间栏。</p>
<p>方案：</p>
<ol>
<li>HTML结构按中左右顺序，CSS为浮动+定位+内边距（圣杯布局）</li>
<li>HTML结构按中左右顺序，CSS为浮动+外边距（双飞翼布局）</li>
</ol>
<p>第一种方式实现代码</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* HTML结构 */</span></div><div class="line"><span class="params">&lt;div class="container"&gt;</span></div><div class="line">	<span class="params">&lt;div id="middle"&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;/div&gt;</span></div><div class="line">	<span class="params">&lt;div id="left"&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;/div&gt;</span></div><div class="line">	<span class="params">&lt;div id="right"&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;/div&gt;</span></div><div class="line"><span class="params">&lt;/div&gt;</span></div><div class="line"><span class="comment">/* CSS代码 */</span></div><div class="line">.<span class="class">container </span>&#123;</div><div class="line">	padding-left: <span class="number">200</span>px;</div><div class="line">	padding-right: <span class="number">220</span>px;</div><div class="line"><span class="symbol">	position:</span> relative;</div><div class="line"><span class="symbol">	overflow:</span> hidden;</div><div class="line">	background-color: <span class="meta">#eee;</span></div><div class="line">&#125;</div><div class="line"><span class="meta">#left, #middle, #right &#123;</span></div><div class="line"><span class="symbol">	float:</span> left;</div><div class="line"><span class="symbol">	position:</span> relative;</div><div class="line">&#125;</div><div class="line"><span class="meta">#left &#123;</span></div><div class="line"><span class="symbol">	left:</span> <span class="number">-200</span>px;</div><div class="line">	margin-left: <span class="number">-100</span>%;</div><div class="line"><span class="symbol">	width:</span> <span class="number">200</span>px;</div><div class="line">	background-color: red;</div><div class="line">&#125;</div><div class="line"><span class="meta">#middle &#123;</span></div><div class="line"><span class="symbol">	width:</span> <span class="number">100</span>%;</div><div class="line">	background-color: green;</div><div class="line">&#125;</div><div class="line"><span class="meta">#right &#123;</span></div><div class="line"><span class="symbol">	right:</span> <span class="number">-220</span>px;</div><div class="line">	margin-left: <span class="number">-220</span>px;</div><div class="line"><span class="symbol">	width:</span> <span class="number">220</span>px;</div><div class="line">	background-color: blue;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注意：.container的宽度不能设置为100%！！否则左右两栏会溢出内容区</p>
<p>第二种方式实现代码</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* HTML结构 */</span></div><div class="line"><span class="params">&lt;div class="container"&gt;</span></div><div class="line">	<span class="params">&lt;div id="middle"&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;/div&gt;</span></div><div class="line"><span class="params">&lt;/div&gt;</span></div><div class="line"><span class="params">&lt;div id="left"&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line"><span class="params">&lt;/div&gt;</span></div><div class="line"><span class="params">&lt;div id="right"&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line"><span class="params">&lt;/div&gt;</span></div><div class="line"><span class="comment">/* CSS代码 */</span></div><div class="line"><span class="meta">#left, #right, .container &#123;</span></div><div class="line"><span class="symbol">	float:</span> left;</div><div class="line">&#125;</div><div class="line"><span class="meta">#left &#123;</span></div><div class="line">	margin-left: <span class="number">-100</span>%;</div><div class="line"><span class="symbol">	width:</span> <span class="number">200</span>px;</div><div class="line">	background-color: red;</div><div class="line">&#125;</div><div class="line"><span class="meta">#right &#123;</span></div><div class="line">	margin-left: <span class="number">-220</span>px;</div><div class="line"><span class="symbol">	width:</span> <span class="number">220</span>px;</div><div class="line">	background-color: blue;</div><div class="line">&#125;</div><div class="line">.<span class="class">container </span>&#123;</div><div class="line"><span class="symbol">	width:</span> <span class="number">100</span>%;</div><div class="line">	background-color: <span class="meta">#eee;</span></div><div class="line">&#125;</div><div class="line"><span class="meta">#middle &#123;</span></div><div class="line">	margin-left: <span class="number">200</span>px;</div><div class="line">	margin-right: <span class="number">220</span>px;</div><div class="line">	background-color: green;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>两种布局方式对比</strong></p>
<p>相同点：</p>
<ul>
<li>都利用了浮动</li>
<li>左栏左外边距均为-100%</li>
</ul>
<p>不同点：</p>
<ul>
<li>HTML结构不同，圣杯结构三栏同级，而双飞翼布局则是在中间栏外层再加上个包裹容器</li>
<li>圣杯布局利用相对定位+padding去除左栏和右栏对中间栏的遮挡</li>
<li>双飞翼布局则是利用中间栏的外边距</li>
<li>圣杯布局将中间栏的宽度设为100%，而双飞翼布局将中间栏的包裹层宽度设为100%</li>
</ul>
<p>两种布局方式的效果是一样的：
<img src="http://ommn78ss1.bkt.clouddn.com/static/images/CSS%E5%B8%83%E5%B1%80/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80.png" alt="三栏布局"></p>
<hr>
<p>问题扩展：不限宽高<br>
布局策略：</p>
<ol>
<li>display: flex</li>
</ol>
<p>对容器使用<code>display: flex;</code>，设置<code>justify-content</code>属性，有五个可选值：<code>flex-star</code>左对齐，'center’居中，<code>flex-end</code>右对齐，<code>space-between</code>两端对齐，中间内容均匀分布，<code>space-around</code>均匀分布（与space-between不同的是没有两端对齐）</p>
<p>需要对自适应的子元素设置<code>width: 100%</code></p>
<p>最终实现等高布局，高度为子元素中最大的高度</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* HTML结构 */</span></div><div class="line"><span class="params">&lt;div class="container"&gt;</span></div><div class="line">	<span class="params">&lt;div id="left"&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;/div&gt;</span></div><div class="line">	<span class="params">&lt;div id="middle"&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;/div&gt;</span></div><div class="line">	<span class="params">&lt;div id="right"&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">		<span class="params">&lt;p&gt;</span><span class="number">123</span><span class="params">&lt;/p&gt;</span></div><div class="line">	<span class="params">&lt;/div&gt;</span></div><div class="line"><span class="params">&lt;/div&gt;</span></div><div class="line"><span class="comment">/* CSS代码 */</span></div><div class="line">.<span class="class">container </span>&#123;</div><div class="line"><span class="symbol">	display:</span> flex;</div><div class="line">	justify-content: space-between;</div><div class="line">	background-color: <span class="meta">#eee;</span></div><div class="line">&#125;</div><div class="line"><span class="meta">#left &#123;</span></div><div class="line"><span class="symbol">	width:</span> <span class="number">200</span>px;</div><div class="line">	background-color: red;</div><div class="line">&#125;</div><div class="line"><span class="meta">#middle &#123;</span></div><div class="line"><span class="symbol">	width:</span> <span class="number">100</span>%;</div><div class="line">	background-color: green;</div><div class="line">&#125;</div><div class="line"><span class="meta">#right &#123;</span></div><div class="line"><span class="symbol">	width:</span> <span class="number">220</span>px;</div><div class="line">	background-color: blue;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="external">Flex 布局教程：语法篇</a></p>
<p><a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="external">Flex 布局教程：实例篇</a></p>
<ol start="2">
<li>display: table-cell</li>
</ol>
<p>对容器设置<code>display: table; width: 100%</code>，对子元素设置<code>display: table-cell;</code></p>
<p>注意：<br>
如果没有对容器设置width: 100%，自适应一栏的宽度只有自身宽度，不会填充容器。</p>
<p>对容器设置<code>display: table; width: 100%</code>，子元素不设置宽度，可以实现等高等宽布局。</p>
<p>还有一些奇奇怪怪的现象，如不设置容器宽度，子元素宽度均为100%时除第一个子元素外其他元素的宽度由自身子元素宽度决定</p>
<p><a href="http://www.zhangxinxu.com/wordpress/2010/10/%E6%88%91%E6%89%80%E7%9F%A5%E9%81%93%E7%9A%84%E5%87%A0%E7%A7%8Ddisplaytable-cell%E7%9A%84%E5%BA%94%E7%94%A8/" target="_blank" rel="external">我所知道的几种display:table-cell的应用</a></p>
]]></content>
      
        
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git使用中遇到的错误]]></title>
      <url>http://ChunlLing.github.io.com/2017/03/14/git%E4%BD%BF%E7%94%A8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%94%99%E8%AF%AF/</url>
      <content type="html"><![CDATA[<p>用以记录在使用git时遇到的错误方便自查~</p>
<hr>
<p>使用<code>git push</code>或<code>git push origin master</code>（向远程仓库提交）时遇到错误：
	<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">To <span class="keyword">https</span>://github.com/XXXX/XXXX.git</div><div class="line"> ! [rejected]        master -&gt; master (fetch <span class="keyword">first</span>)</div><div class="line">error: failed <span class="built_in">to</span> push some refs <span class="built_in">to</span> <span class="string">'https://github.com/XXXX/XXXX.git'</span></div><div class="line">hint: Updates were rejected because <span class="keyword">the</span> remote <span class="keyword">contains</span> work that you <span class="built_in">do</span></div><div class="line">hint: <span class="keyword">not</span> have locally. This is usually caused <span class="keyword">by</span> another repository pushing</div><div class="line">hint: <span class="built_in">to</span> <span class="keyword">the</span> same ref. You may want <span class="built_in">to</span> <span class="keyword">first</span> integrate <span class="keyword">the</span> remote changes</div><div class="line">hint: (e.g., <span class="string">'git pull ...'</span>) <span class="keyword">before</span> pushing again.</div><div class="line">hint: See <span class="keyword">the</span> <span class="string">'Note about fast-forwards'</span> <span class="keyword">in</span> <span class="string">'git push --help'</span> <span class="keyword">for</span> details.</div></pre></td></tr></table></figure></p>
<p>原因：远程仓库中的master分支（假设仅有一个master分支）有新的提交而本地仓库没有更新同步到这个提交，所以本地仓库向远程仓库推送提交的时候会报出这个错误。解决的方法是先把远程仓库的提交抓取下来再提交。
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>git pull</div><div class="line"><span class="variable">$ </span>git push</div></pre></td></tr></table></figure></p>
<p>注意：<code>git pull</code>会提示&quot;Please enter a commit message to explain why this merge is necessary, especially if it merges an updated upstream into a topic branch。&quot;，意思是输入可以描述此次合并分支的提交信息。可以选择写也可以不写，然后按下<code>Esc</code>键输入<code>:wq</code>（强制性写入文件并退出），按下<code>Enter</code>就可以了。</p>
]]></content>
      
        
        <tags>
            
            <tag> git </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IFE热身题-小球吃星星]]></title>
      <url>http://ChunlLing.github.io.com/2017/03/13/IFE%E7%83%AD%E8%BA%AB%E9%A2%98-%E5%B0%8F%E7%90%83%E5%90%83%E6%98%9F%E6%98%9F/</url>
      <content type="html"><![CDATA[<p>下午做的四道题，觉得第四道hin有趣，又玩了几遍，做个记录~</p>
<hr>
<p>先看下题目
	<img src="http://ommn78ss1.bkt.clouddn.com/static/images/IFE%E7%83%AD%E8%BA%AB%E9%A2%98-%E5%B0%8F%E7%90%83%E5%90%83%E6%98%9F%E6%98%9F/Step4.PNG" alt="Step4"></p>
<p>一开始看题目简直是一脸懵逼，后来在我不断钻研下，终于从万能的网友回答中看出了些门路~~~-_-|||</p>
<p>根据文本框的提示<code>调用'ball'的api移动小球，例如'ball.at(82, 46, ball =&gt; ball.turnRight())'</code>大概知道这里用到的是ES6的<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="external">箭头函数</a>。<code>Ctrl+Shift+I</code>调出控制面板，输入<code>console.log(ball)</code>查看ball的API，然并卵，控制器输出的是<code>Uncaught ReferenceError: ball is not defined</code>。哼，我才不会就这么死心呢。打开控制台的<code>Sources</code>面板，<code>2017/asset\js</code>文件里面竟然有3个js文件！那好吧，格式下js文件（点击左下角的<code>{}</code>），<code>Ctrl+F</code>调出查找面板，查找<code>turnRight</code>，当当当，以下就是找到的关于<code>ball</code>的几个方法。
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">o.fackBall = &#123;</div><div class="line">       <span class="attr">x</span>: <span class="number">0</span>,</div><div class="line">       <span class="attr">y</span>: <span class="number">0</span>,</div><div class="line">       <span class="attr">direction</span>: <span class="string">""</span>,</div><div class="line">       <span class="attr">at</span>: <span class="function"><span class="keyword">function</span>(<span class="params">t, e, s</span>) </span>&#123;</div><div class="line">           <span class="keyword">return</span> c.at(t, e, s),</div><div class="line">           <span class="keyword">this</span></div><div class="line">       &#125;,</div><div class="line">       <span class="attr">turnLeft</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">           <span class="keyword">switch</span> (c.direction) &#123;</div><div class="line">           <span class="keyword">case</span> <span class="string">"t"</span>:</div><div class="line">               c.direction = <span class="string">"l"</span>;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="keyword">case</span> <span class="string">"l"</span>:</div><div class="line">               c.direction = <span class="string">"b"</span>;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="keyword">case</span> <span class="string">"b"</span>:</div><div class="line">               c.direction = <span class="string">"r"</span>;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="keyword">case</span> <span class="string">"r"</span>:</div><div class="line">               c.direction = <span class="string">"t"</span></div><div class="line">           &#125;</div><div class="line">           <span class="keyword">return</span> <span class="keyword">this</span></div><div class="line">       &#125;,</div><div class="line">       <span class="attr">turnRight</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">           <span class="keyword">switch</span> (c.direction) &#123;</div><div class="line">           <span class="keyword">case</span> <span class="string">"t"</span>:</div><div class="line">               c.direction = <span class="string">"r"</span>;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="keyword">case</span> <span class="string">"r"</span>:</div><div class="line">               c.direction = <span class="string">"b"</span>;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="keyword">case</span> <span class="string">"b"</span>:</div><div class="line">               c.direction = <span class="string">"l"</span>;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="keyword">case</span> <span class="string">"l"</span>:</div><div class="line">               c.direction = <span class="string">"t"</span></div><div class="line">           &#125;</div><div class="line">           <span class="keyword">return</span> <span class="keyword">this</span></div><div class="line">       &#125;,</div><div class="line">       <span class="attr">turnBack</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">           <span class="keyword">switch</span> (c.direction) &#123;</div><div class="line">           <span class="keyword">case</span> <span class="string">"t"</span>:</div><div class="line">               c.direction = <span class="string">"b"</span>;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="keyword">case</span> <span class="string">"b"</span>:</div><div class="line">               c.direction = <span class="string">"t"</span>;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="keyword">case</span> <span class="string">"l"</span>:</div><div class="line">               c.direction = <span class="string">"r"</span>;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="keyword">case</span> <span class="string">"r"</span>:</div><div class="line">               c.direction = <span class="string">"l"</span></div><div class="line">           &#125;</div><div class="line">           <span class="keyword">return</span> <span class="keyword">this</span></div><div class="line">       &#125;,</div><div class="line">       <span class="attr">wait</span>: <span class="function"><span class="keyword">function</span>(<span class="params">t</span>) </span>&#123;</div><div class="line">           <span class="keyword">return</span> c.waitStartTime = <span class="built_in">Date</span>.now(),</div><div class="line">           c.waitTime = t,</div><div class="line">           <span class="keyword">this</span></div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>大概看下代码，<code>turnLeft</code>是向左转，<code>turnRight</code>是向右转，<code>turnBack</code>是向后转，<code>wait</code>是使时间延迟。
　　那么，回来看题目。这XX我怎么知道坐标啊。再次感谢万能的网络MUA<sub>用鼠标点击屏幕控制台会显示点击点的坐标，诺，像酱</sub>
<img src="http://ommn78ss1.bkt.clouddn.com/static/images/IFE%E7%83%AD%E8%BA%AB%E9%A2%98-%E5%B0%8F%E7%90%83%E5%90%83%E6%98%9F%E6%98%9F/position.gif" alt="position"></p>
<p>有了坐标，有了API，那就开始动手吧
在笔记上规划好路径，写下每个转折点的坐标。
我的代码如下：</p>
   <figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">ball.at(<span class="number">0</span>, <span class="number">46</span>, ball =&gt; ball.wait(<span class="number">1500</span>));</div><div class="line">var right = (x, y) =&gt; ball.at(x, y, ball =&gt; ball.turnRight());</div><div class="line">var left = (x, y) =&gt; ball.at(x, y, ball =&gt; ball.turnLeft());</div><div class="line">var back = (x, y) =&gt; ball.at(x, y, ball =&gt; ball.turnBack());</div><div class="line">right(<span class="number">76</span>, <span class="number">46</span>);</div><div class="line">left(<span class="number">76</span>, <span class="number">136</span>);</div><div class="line">right(<span class="number">130</span>, <span class="number">136</span>);</div><div class="line">right(<span class="number">130</span>, <span class="number">243</span>);</div><div class="line">left(<span class="number">91</span>, <span class="number">243</span>);</div><div class="line">right(<span class="number">91</span>, <span class="number">364</span>);</div><div class="line">back(<span class="number">18</span>, <span class="number">364</span>);</div><div class="line">right(<span class="number">176</span>, <span class="number">364</span>);</div><div class="line">right(<span class="number">176</span>, <span class="number">468</span>);</div><div class="line">back(<span class="number">18</span>, <span class="number">468</span>);</div><div class="line">left(<span class="number">372</span>, <span class="number">468</span>);</div><div class="line">left(<span class="number">372</span>, <span class="number">46</span>);</div><div class="line">left(<span class="number">270</span>, <span class="number">46</span>);</div><div class="line">right(<span class="number">270</span>, <span class="number">134</span>);</div><div class="line">left(<span class="number">222</span>, <span class="number">134</span>);</div><div class="line">right(<span class="number">222</span>, <span class="number">243</span>);</div><div class="line">back(<span class="number">173</span>, <span class="number">243</span>);</div><div class="line">right(<span class="number">273</span>, <span class="number">243</span>);</div><div class="line">left(<span class="number">273</span>, <span class="number">290</span>);</div><div class="line">left(<span class="number">367</span>, <span class="number">290</span>);</div><div class="line">right(<span class="number">367</span>, <span class="number">105</span>);</div><div class="line">left(<span class="number">469</span>, <span class="number">105</span>);</div><div class="line">right(<span class="number">469</span>, <span class="number">14</span>);</div><div class="line">right(<span class="number">552</span>, <span class="number">14</span>);</div><div class="line">left(<span class="number">552</span>, <span class="number">105</span>);</div><div class="line">right(<span class="number">618</span>, <span class="number">105</span>);</div><div class="line">right(<span class="number">618</span>, <span class="number">190</span>);</div><div class="line">left(<span class="number">577</span>, <span class="number">190</span>);</div><div class="line">left(<span class="number">577</span>, <span class="number">473</span>);</div></pre></td></tr></table></figure>
<hr>
<p><strong>然而！！！然而！！！然而这不是我的解题过程</strong>。傻傻如我，是直接调出控制台记录每个区域块的左上顶点坐标和宽高值，所以当后来我知道可以用鼠标点击获取坐标时我就这表情/(ㄒoㄒ)/~~
<img src="http://ommn78ss1.bkt.clouddn.com/static/images/IFE%E7%83%AD%E8%BA%AB%E9%A2%98-%E5%B0%8F%E7%90%83%E5%90%83%E6%98%9F%E6%98%9F/%E6%97%A0%E6%A0%87%E9%A2%98.png" alt="解题过程1"></p>
<p>我规划的路径是(1)-&gt;(2)-&gt;(3)-&gt;(4)-&gt;(5)-&gt;(6)-&gt;(7)-&gt;(8)-&gt;(9)-&gt;(10)-&gt;(11)-&gt;(12)-&gt;(13)-&gt;(14)-&gt;(3)-&gt;(4)-&gt;(15)-&gt;(16)-&gt;(17)-&gt;(18)-&gt;(19)-&gt;(20)-&gt;(21)-&gt;(22)-&gt;(23)-&gt;(24)-&gt;(25)-&gt;(26)
　　不过后来发现这里有个坑：小球经过同个点的时候只能有一种行为，比方说上面的规划路径(3)、(4)是定义了两次，那么实际上小球在这两个点上最终的行为是以后定义的为准的，而我在这两个点定义的两次方向是相反的，所以小球第一次经过(3)点的时候就报错了。解决的方法有两个：1. 定义一个附近的点，但要注意这个点之前不会经过；2. 重新规划一条路线。我这里选择了重新规划路线，最终流程图是这样的：
<img src="http://ommn78ss1.bkt.clouddn.com/static/images/IFE%E7%83%AD%E8%BA%AB%E9%A2%98-%E5%B0%8F%E7%90%83%E5%90%83%E6%98%9F%E6%98%9F/%E6%97%A0%E6%A0%87%E9%A2%98%20-%20%E5%89%AF%E6%9C%AC.png" alt="解题过程2"></p>
<p>应该会有更优的方案，这里没有做对比。最后运行结果如图：
<img src="http://ommn78ss1.bkt.clouddn.com/static/images/IFE%E7%83%AD%E8%BA%AB%E9%A2%98-%E5%B0%8F%E7%90%83%E5%90%83%E6%98%9F%E6%98%9F/IFE_ball.gif" alt="运行结果"></p>
<p>关于小球运动后的两颗星星如何吃到。可以在前面加上<code>ball.at(0, 46, ball =&gt; ball.wait(1500));</code>，让小球先等一会再动。</p>
<p>总结：<strong>知无涯</strong>。当学习到的越多，就会越加意识到先前的浅薄无知，所以，保持虚心。在知乎看过一个关于前端的回答：前端的学习是先平缓后陡峭再平缓的，也许现在的我就在这陡峭的山脚下，但，我是一个喜欢爬上山顶看风景的人~</p>
]]></content>
      
        
        <tags>
            
            <tag> JS </tag>
            
            <tag> ES6 </tag>
            
            <tag> 测试题 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript基础笔记]]></title>
      <url>http://ChunlLing.github.io.com/2017/03/12/Javascript%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h1>基本语法</h1>
<p>Javascript区分大小写。</p>
<p>标识符命名规则：</p>
<ul>
<li>第一个字符必须是一个字母、下划线<code>_</code>或一个美元符号<code>$</code></li>
<li>其他字符可以是字母、下划线、美元符号或数字</li>
<li>不能把关键字、保留字、true、false和null作为标识符</li>
</ul>
<table>
<thead>
<tr>
<th>ECMAScript全部关键字</th>
</tr>
</thead>
<tbody>
<tr>
<td>break</td>
</tr>
<tr>
<td>delete</td>
</tr>
<tr>
<td>function</td>
</tr>
<tr>
<td>return</td>
</tr>
<tr>
<td>typeof</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>ECMA-262第三版全部保留字</th>
</tr>
</thead>
<tbody>
<tr>
<td>abstract</td>
</tr>
<tr>
<td>double</td>
</tr>
<tr>
<td>implements</td>
</tr>
<tr>
<td>package</td>
</tr>
<tr>
<td>super</td>
</tr>
</tbody>
</table>
<p>注释：<code>//</code>单行注释 | <code>/* */</code>多行注释</p>
<p>Javascript的每个语句以<code>;</code>结束，语句块用<code>{}</code>。
虽然Javascript不强制使用<code>;</code>，不过始终补上<code>;</code>是一个良好的习惯。
可选分号通用规则：如果当前语句和下一行语句无法合并解析，Javascrpt则在第一行后填补分号。
示例：</p>
<figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">var</span> a</div><div class="line">a</div><div class="line">=</div><div class="line"><span class="number">3</span></div><div class="line">console.log(a)</div></pre></td></tr></table></figure>
<p>等价于</p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var a<span class="comment">;</span></div><div class="line"><span class="attribute">a</span> = <span class="number">3</span><span class="comment">;</span></div><div class="line">console.log(a)<span class="comment">;</span></div></pre></td></tr></table></figure>
<p>两个例外：</p>
<ol>
<li>
<p>如果<code>return</code>、<code>break</code>和<code>continue</code>后紧跟着换行，则会在换行处填补分号。
示例：</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">return</span></div><div class="line"><span class="literal">true</span></div></pre></td></tr></table></figure>
<p>等价于</p>
 <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">return</span>;</div><div class="line"><span class="literal">true</span>;</div></pre></td></tr></table></figure>
</li>
<li>
<p>如果将<code>++</code>或<code>--</code>用做后缀表达式，应当和表达式在同一行，否则行尾自动填补分号。
示例：</p>
 <figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="section">x</span></div><div class="line">++</div><div class="line">y</div></pre></td></tr></table></figure>
<p>等价于</p>
 <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">x<span class="comment">;</span></div><div class="line">++y<span class="comment">;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>赋值语句：</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">var x</span> = 0;</div></pre></td></tr></table></figure>
<p>字符串也可以视为完整的语句</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"Hello World!"</span></div></pre></td></tr></table></figure>
<p>注意如果字符串不用<code>''</code>或<code>&quot;&quot;</code>包裹会抛出<code>ReferenceError（引用错误）</code>。</p>
<h1>数据类型</h1>
<h2>原始类型（primitive type）</h2>
<ul>
<li>Number
包含两种数值：整数和浮点数。
八进制数值字面量：前导为<code>0</code>
十六进制数值字面量：前导为<code>0x</code>
浮点类型数值包含一个小数点，且小数点后面必须至少有一位数字。由于保存浮点数值需要的内存空间比整数型数值大两倍，如果浮点数值小数点后没有数字或数字都为0会自动转化为整型。
对于过大或过小的数值可以用科学表示法<code>e表示法</code>，用e表示该数值的前面数值的10的指数次幂。浮点数值的范围在：<code>Number.MIN_VALUE</code>到<code>Number.MAX_VALUE</code>之间。如果超过了浮点数值范围的最大值或最小值，则会出现<code>Infinity（正无穷）</code>或<code>-Infinity（负无穷）</code>。
<code>isFinite()</code>函数可以确定一个数值是否超过了规定范围，没有超过返回<code>true</code>，超过返回<code>false</code>。
<code>NaN</code>即Not a Number，用于表示一个本来要返回数值的操作数未返回数值的情况（这样就不回抛出错误）。<code>NaN</code>与任何值都不相等，包括它自身。
判别一个字面量x是否为<code>NaN</code>有两种方式：<code>x != x</code> 或者 <code>isNaN(x)</code> 。注意，<code>isNaN(true)</code>会返回<code>false</code>，因为<code>true</code>会被转换为数字1。
非数值转化为数值：<code>Number()</code>、<code>parseInt()</code>、<code>parseFloat()</code></li>
<li>String
用于表示由零或多个16位Unicode字符组成的字符串。</li>
<li>Boolean
有两个值：<code>true</code>和<code>false</code>。而<code>true</code>不一定等于1，<code>false</code>不一定等于0.由于JavaScript区分大小写，所以<code>TRUE</code>和<code>FALSE</code>或其他不是Boolean类型的值。
其他类型转换成Boolean类型规则：<img src="http://ommn78ss1.bkt.clouddn.com/static/images/JavaScript%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/%E5%85%B6%E4%BB%96%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2Boolean.png" alt="其他类型转换成Boolean类型规则"></li>
<li>NULL
只用一个值<code>null</code>。表示一个空对象引用（指针）。使用<code>typeof</code>操作符检测<code>null</code>会返回<code>object</code></li>
<li>Undefined
只有一个值<code>undefined</code>。在使用<code>var</code>声明变量但没有对其初始化时，这个变量的值就是<code>undefined</code>
对于未初始化的变量与未声明的变量，使用<code>typeof</code>操作符时都是返回<code>undefined</code>。从逻辑上而言，前者的值是<code>undefined</code>，而后者是<code>ReferenceError（引用错误）</code></li>
</ul>
<h2>对象类型（objext type）</h2>
<ul>
<li>Array</li>
<li>Object
原始值是 <em>不可更改</em> 的；原始值得比较是 <em>值</em> 的比较。
对象值是 <em>可修改</em> 的；对象的比较是 <em>引用</em> 的比较。</li>
</ul>
<p><strong>typeof</strong>操作符：用来检测变量的数据类型</p>
]]></content>
      
        
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> JS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[停一下，再奔跑]]></title>
      <url>http://ChunlLing.github.io.com/2017/03/11/%E5%81%9C%E4%B8%80%E4%B8%8B%EF%BC%8C%E5%86%8D%E5%A5%94%E8%B7%91/</url>
      <content type="html"><![CDATA[<p>去掉修改论文和修复u盘以及其他杂务，差不多花了3天的时间折腾博客。虽然不快，从什么都不懂到看教程查文档大概能了解npm、git、hexo配置，在看到网页的效果一点一点的呈现出来的时候，还是小有成就感的，就像小时候课堂上完成作业被老师奖励小红花一样。
　　刚看到一句话</p>
<blockquote>
<p>每个人都应该拥有属于自己的想象世界，即使那个世界再可笑再荒谬。------ 朱德庸</p>
</blockquote>
<p>真巧，正是我心里所想。
　　小学、中学、大学，就像是一条既定的路线，沿着它走下去就对了。可是，毕业后呢？幸好，上大学后开始琢磨啥样的人生才是自己追求的。回忆起来，大一应该是最悠闲的时光吧。刚步入大学的校园，周围一起都是新奇的。来自四面八方的朋友，相对以前更自由的学习方式…那会在家人的帮助下，鼓捣着一间淘宝店，然而无意经营，却迷上了技术。那时也才刚接触计算机，能熟练的操作仅限于开机和关机，以及拆电池[捂脸.jpg]。从安装校园网客户端、用word制作传单一点一点慢慢积累基础的计算机操作，到后来饭上PS，“怂恿”自己参加平面设计比赛、大过年的躲在家P出游图-_-|||，再到现在恋上敲代码，不停的挖坑，也不停的填坑，每天都在收获新知识。因为喜欢而去坚持，感觉真幸运。
　　临近毕业，感觉像是突然间要成长的小孩，找工作、充实技能，迈出校园的大门，就要学会独当一面啦(๑•̀ㅂ•́)و✧
　　前几天和侄女通话，竟然聊了差不多一个小时，寡言如我每次和小孩子却能聊个没完。侄女问我以后想当什么呀，没法向侄女解释什么是程序猿，所以我开玩笑说我想做猴子。那小家伙在电话那边笑个不停，说姑姑想当猴子这太好笑了，然后又说她想做一棵树。哈哈哈莫名的小感动~
　　昨天拍的一张图，中区突然建起了这么一座楼，我以为我可能上了一学期的假课|(*′口`)
　　<img src="http://ommn78ss1.bkt.clouddn.com/static/images/%E5%81%9C%E4%B8%80%E4%B8%8B%EF%BC%8C%E5%86%8D%E5%A5%94%E8%B7%91/modify.jpg" alt="中区篮球场">
　　稍微修了一下，发觉还不错【快！夸！我！(‾◡◝)】
　　<img src="http://ommn78ss1.bkt.clouddn.com/static/images/%E5%81%9C%E4%B8%80%E4%B8%8B%EF%BC%8C%E5%86%8D%E5%A5%94%E8%B7%91/original.jpg" alt="">
　　现在是2017年3月11日1点11分，已不太记得是第几个超过0点的夜晚了。晚安~</p>
]]></content>
      
        
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[小白爱折腾之hexo+GitHub搭建个人博客]]></title>
      <url>http://ChunlLing.github.io.com/2017/03/08/%E5%B0%8F%E7%99%BD%E7%88%B1%E6%8A%98%E8%85%BE%E4%B9%8Bhexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p>非教程帖，仅做挖坑记录和反思</p>
<h1>前期准备：</h1>
<ul>
<li>安装git</li>
<li>安装node.js</li>
<li>安装hexo</li>
<li>申请GitHub账号</li>
</ul>
<h1>搭建步骤：</h1>
<p>1 创建仓库：<a href="http://xn--eqr924avxo.github.io" target="_blank" rel="external">用户名.github.io</a></p>
<p>2 在本地指定根目录输入命令（cmd或git）：hexo init 用户名.github,io
结果： 生成“用户名.github,io”文件夹</p>
<p><strong>文件结构树：</strong></p>
<ul>
<li>用户名.github,io
<ul>
<li>node_mdules</li>
<li>scaffolds</li>
<li>source		[资源文件]</li>
<li>themes		[主题文件]</li>
<li>.gitgnore</li>
<li>_config.yml	[站点配置文件]</li>
<li>package.json	[应用程序数据]</li>
</ul>
</li>
</ul>
<p>3 在“用户名.github,io”根目录输入命令（cmd或git）：hexo s，在浏览器输入localhost:4000</p>
<p>至此，初级搭建成功。</p>
<p>本地预览： <code>hexo s</code>或<code>hexo server</code></p>
<hr>
<h1>进阶-写博客：</h1>
<p>创建新文章： <code>hexo new &quot;文章标题&quot;</code> （存在source_posts目录中）</p>
<p>创建草稿： <code>hexo new draft &quot;文章标题&quot;</code> （会在source文件夹中新建一个文件夹“_drafts”）
发布草稿： <code>hexo publish &quot;文章标题&quot;</code> （会将存在source_drafts的草稿发布到&quot;_posts&quot;文件夹中）</p>
<p>安装自动部署发布工具：<code>hexo-deployer-git</code>
没安装的后果就是后面<code>hexo d</code>会出现 “cannot found git” 的错误</p>
<p>清除缓存：<code>hexo clean</code>
生成静态文件：<code>hexo generate</code>或<code>hexo g</code>
部署到git上：<code>hexo deploy</code>或<code>hexo d</code></p>
<hr>
<h1>进阶-更换主题：</h1>
<p>到<a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo</a>选择喜欢的主题。这里选了<a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="external">Yelee</a>这个主题。
<a href="http://moxfive.coding.me/yelee/" target="_blank" rel="external">Yelee安装教程</a>。教程很详细，这里就不细述了b(￣▽￣)d</p>
<p>趁着还有半小时断网，再试一个主题<a href="http://luuman.github.io/2015/12/27/Hexo/HexoTheme/" target="_blank" rel="external">Hexo 主题：SPFK</a></p>
<p>最后本博客选择Yelee和SPFK两个主题混搭。主要用了SPFK的样式，但用了Yelee的一些配置。</p>
<h2><strong>站点Swiftype搜索框</strong></h2>
<ol>
<li>
<p>目标文件：<code>\themes\spfk\source\css\_partial</code>
操作：添加文件【添加<code>\themes\yelee\source\css\_partial</code>目录下的<code>search.styl</code>文件】</p>
</li>
<li>
<p>目标文件：<code>\themes\spfk\source\js\_partial</code>
操作：添加文件【添加<code>\themes\yelee\source\js\_partial</code>目录下的<code>search.js</code>文件】</p>
</li>
<li>
<p>目标文件：<code>\themes\spfk\layout\_partial\left-col.ejs</code>
操作：替换代码【将第一段代码替换成第二段代码】</p>
 <figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby"> <span class="keyword">if</span> (theme.search_box)&#123; </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"st-default-search-input search"</span> <span class="attr">id</span>=<span class="string">"search"</span> <span class="attr">placeholder</span>=<span class="string">" Search..."</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby">&#125;</span><span class="xml"><span class="tag">%&gt;</span></span></div></pre></td></tr></table></figure>
 <figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby"> <span class="keyword">if</span> (theme.search.on)&#123; </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"search-form"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"local-search-input"</span> <span class="attr">name</span>=<span class="string">"q"</span> <span class="attr">placeholder</span>=<span class="string">"search..."</span> <span class="attr">class</span>=<span class="string">"search form-control"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">autocorrect</span>=<span class="string">"off"</span> <span class="attr">searchonload</span>=<span class="string">"&lt;%=</span></span><span class="ruby"> theme.search.onload </span><span class="xml"><span class="tag"><span class="string">%&gt;"</span> /&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-times"</span> <span class="attr">onclick</span>=<span class="string">"resetSearch()"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"local-search-result"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">'no-result'</span>&gt;</span>No results found <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">'fa fa-spinner fa-pulse'</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby">&#125;</span><span class="xml"><span class="tag">%&gt;</span></span></div></pre></td></tr></table></figure>
</li>
<li>
<p>目标文件：<code>\themes\spfk\source\js\pc.js</code>
操作：添加代码【添加到<code>define([], function(){})</code>的<code>function</code>里面<code>return</code>之前】</p>
 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (yiliaConfig.search) &#123;</div><div class="line">    <span class="keyword">var</span> search = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">require</span>([yiliaConfig.rootUrl + <span class="string">'js/search.js'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> inputArea = <span class="built_in">document</span>.querySelector(<span class="string">"#local-search-input"</span>);</div><div class="line">            <span class="keyword">var</span> $HideWhenSearch = $(<span class="string">"#toc, #tocButton, .post-list, #post-nav-button a:nth-child(2)"</span>);</div><div class="line">            <span class="keyword">var</span> $resetButton = $(<span class="string">"#search-form .fa-times"</span>);</div><div class="line">            <span class="keyword">var</span> $resultArea = $(<span class="string">"#local-search-result"</span>);</div><div class="line"></div><div class="line">            <span class="keyword">var</span> getSearchFile = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                <span class="keyword">var</span> search_path = <span class="string">"search.xml"</span>;</div><div class="line">                <span class="keyword">var</span> path = yiliaConfig.rootUrl + search_path;</div><div class="line">                searchFunc(path, <span class="string">'local-search-input'</span>, <span class="string">'local-search-result'</span>);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">var</span> getFileOnload = inputArea.getAttribute(<span class="string">'searchonload'</span>);</div><div class="line">            <span class="keyword">if</span> (yiliaConfig.search &amp;&amp; getFileOnload === <span class="string">"true"</span>) &#123;</div><div class="line">                getSearchFile();</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                inputArea.onfocus = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; getSearchFile() &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">var</span> HideTocArea = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                $HideWhenSearch.css(<span class="string">"visibility"</span>,<span class="string">"hidden"</span>);</div><div class="line">                $resetButton.show();</div><div class="line">            &#125;</div><div class="line">            inputArea.oninput = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; HideTocArea() &#125;</div><div class="line">            inputArea.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="keyword">if</span>(event.keyCode==<span class="number">13</span>) <span class="keyword">return</span> <span class="literal">false</span>&#125;</div><div class="line"></div><div class="line">            resetSearch = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                $HideWhenSearch.css(<span class="string">"visibility"</span>,<span class="string">"initial"</span>);</div><div class="line">                $resultArea.html(<span class="string">""</span>);</div><div class="line">                <span class="built_in">document</span>.querySelector(<span class="string">"#search-form"</span>).reset();</div><div class="line">                $resetButton.hide();</div><div class="line">                $(<span class="string">".no-result"</span>).hide();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            $resultArea.bind(<span class="string">"DOMNodeRemoved DOMNodeInserted"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">                <span class="keyword">if</span> (!$(e.target).text()) &#123;</div><div class="line">                    $(<span class="string">".no-result"</span>).show(<span class="number">200</span>);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                  $(<span class="string">".no-result"</span>).hide();</div><div class="line">                &#125;</div><div class="line">            &#125;)</div><div class="line">        &#125;)</div><div class="line">    &#125;()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li>
<p>目标文件：<code>\themes\spfk\layout\_partial\after-footer.ejs&quot;</code>
操作：删除代码</p>
 <figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby"> <span class="keyword">if</span> (theme.search_box)&#123; </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">      <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"search"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">"search"</span>)</div><div class="line">            search();</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        (<span class="function"><span class="keyword">function</span>(<span class="params">w,d,t,u,n,s,e</span>)</span>&#123;w[<span class="string">'SwiftypeObject'</span>]=n;w[n]=w[n]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        (w[n].q=w[n].q||[]).push(<span class="built_in">arguments</span>);&#125;;s=d.createElement(t);</div><div class="line">        e=d.getElementsByTagName(t)[<span class="number">0</span>];s.async=<span class="number">1</span>;s.src=u;e.parentNode.insertBefore(s,e);</div><div class="line">        &#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">'script'</span>,<span class="string">'//s.swiftypecdn.com/install/v2/st.js'</span>,<span class="string">'_st'</span>);</div><div class="line"></div><div class="line">        _st(<span class="string">'install'</span>,<span class="string">'A1Pz-LKMXbrzcFg2FWi6'</span>,<span class="string">'2.0.0'</span>);</div><div class="line">      &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby">&#125;</span><span class="xml"><span class="tag">%&gt;</span></span></div></pre></td></tr></table></figure>
</li>
<li>
<p>目标文件：<code>\themes\spfk\source\css\style.styl</code>
操作：添加代码【添加到最后防止被覆盖】</p>
 <figure class="highlight openscad"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="built_in">search</span></div><div class="line">  @<span class="built_in">import</span> <span class="string">"_partial/search"</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>上面主要是实现本地搜索功能，修改样式看个人喜好，主要修改的样式文件是：<code>\themes\spfk\source\css\_partial\main.styl</code>
小技巧：<code>Ctrl+F</code>调出查找栏，输入“search”，对包含有这个对象的文件进行相应的修改，耐力活 =_=</p>
<h2><strong>阅读全文设置</strong></h2>
<p><a href="https://twiceyuan.com/2014/05/25/hexo%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0readmore%E6%A0%87%E8%AE%B0/" target="_blank" rel="external">Hexo自动添加ReadMore标记</a></p>
<hr>
<h1>进阶-使用插件</h1>
<h2><strong>使用七牛云</strong></h2>
<ol>
<li>
<p>注册<a href="https://www.qiniu.com/" target="_blank" rel="external">七牛</a>云账号。注册完成后添加对象存储，记住空间名称，后面要用到</p>
</li>
<li>
<p>在根目录下执行：<code>npm install hexo-qiniu-sync --save</code></p>
</li>
<li>
<p>在站点配置文件<code>_config.yml</code>（在根目录下）中配置：</p>
 <figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 七牛云</span></div><div class="line"><span class="attr">qiniu:</span></div><div class="line"><span class="attr">  offline:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  sync:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  bucket:</span> <span class="comment">#空间名称</span></div><div class="line"><span class="comment"># secret_file: sec/qn.json or C:</span></div><div class="line"><span class="attr">  access_key:</span> <span class="comment">#七牛个人中心/密钥管理复制</span></div><div class="line"><span class="attr">  secret_key:</span> <span class="comment">#七牛个人中心/密钥管理复制</span></div><div class="line"><span class="attr">  dirPrefix:</span> static</div><div class="line"><span class="attr">  urlPrefix:</span> http://bucket_name.qiniudn.com/static</div><div class="line"><span class="attr">  up_host:</span> http://upload.qiniu.com</div><div class="line"><span class="attr">  local_dir:</span> static</div><div class="line"><span class="attr">  update_exist:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  image:</span> </div><div class="line"><span class="attr">    folder:</span> images</div><div class="line"><span class="attr">    extend:</span> </div><div class="line"><span class="attr">  js:</span></div><div class="line"><span class="attr">    folder:</span> js</div><div class="line"><span class="attr">  css:</span></div><div class="line"><span class="attr">    folder:</span> css</div></pre></td></tr></table></figure>
<p>这里注释了secret_file: sec/qn.json or C:是因为会报错</p>
 <figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">FATAL incomplete <span class="built_in">explicit</span> mapping pair; a <span class="built_in">key</span> node <span class="built_in">is</span> missed <span class="built_in">at</span> line <span class="number">74</span>, column <span class="number">32</span>:</div><div class="line">     secret_file: <span class="built_in">sec</span>/qn.json <span class="keyword">or</span> C:</div><div class="line">     ...</div></pre></td></tr></table></figure>
</li>
<li>
<p>执行<code>hexo qiniu s</code>同步上传</p>
</li>
</ol>
<hr>
<h1>参考：</h1>
<ul>
<li><a href="http://www.jianshu.com/p/380290deb8f0" target="_blank" rel="external">免费个人博客搭建详解</a></li>
<li><a href="http://div.io/topic/1691" target="_blank" rel="external">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></li>
<li><a href="http://moxfive.coding.me/yelee/" target="_blank" rel="external">Yelee —— 简而不减 Hexo 双栏博客主题</a></li>
</ul>
<hr>
<h1>遇到的问题：</h1>
<ol>
<li>
<p>使用hexo d之后直接输入<code>https://用户名.github.io</code>显示404
答： 没有配置deploy的type和repo</p>
</li>
<li>
<p>更改以前的文章内容，使用hexo clean、hexo g、hexo d没有用，而且localhost:4000也一样
答： 因为修改的文件不是_post里面的文件…(╯‵□′)╯︵┻━┻z
反思： 要细心阿！！！</p>
</li>
<li>
<p>编辑输入时替换后一格内容【这个不在hexo配置范畴内】
答：按下<code>Insert</code>键试试？</p>
</li>
<li>
<p>关于markdown的有序列表一点小问题。编辑的时候应该为子项内容缩进一格，否则如果当子项内容长时该子项后面的子项序号会重新从1开始。</p>
</li>
<li>
<p>markdown表格？似乎没有被渲染成表格。</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">|<span class="string"> column </span>|<span class="string"> column </span>|</div><div class="line">|<span class="string">--------</span>|<span class="string">--------</span>|</div><div class="line">|<span class="string">        </span>|<span class="string">        </span>|</div></pre></td></tr></table></figure>
<p>因为被浏览器（Chrome）检测为不安全脚本了<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></p>
</li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
